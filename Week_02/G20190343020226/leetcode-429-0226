class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> levelResult = new ArrayList<>();
        if (root == null) {
            return levelResult;
        }
        List<Integer> levellist = new ArrayList<>();
        levellist.add(root.val);
        levelResult.add(levellist);
        recursionChildren(root, levelResult, 0);
        return levelResult;
    }

    void recursionChildren(Node root, List<List<Integer>> levelResult, int level) {
        if (root.children == null || root.children.size() == 0) {
            return;
        }
        if (levelResult.size() - 1 < level) {
            levelResult.add(new ArrayList<>());
        }
        List<Integer> levelList = levelResult.get(level);
        level++;
        for (Node child : root.children) {
            if (child == null) {
                continue;
            }
            levelList.add(child.val);
            recursionChildren(child, levelResult, level);
        }
    }
}
