/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        return mergeTwoListsCycle(l1, l2);
    }

    private ListNode mergeTwoListsCycle(ListNode l1, ListNode l2) {
        if(l1 == null){
            return l2;
        }
        if(l2 == null) {
            return l1;
        }
        ListNode head = new ListNode(-1);
        ListNode preNode = head;
        while (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                preNode.next = l1;
                l1 = l1.next;
            } else {
                preNode.next = l2;
                l2 = l2.next;
            }
            preNode = preNode.next;
        }
        preNode.next = l1 == null ? l2 : l1;
        return head.next;
    }
}
